#!/usr/bin/env python3
"""
Run fine-tuning after dataset inspection.
Use this script after reviewing the dataset files generated by create_introspection_dataset.py
"""

import os
from create_introspection_dataset import fine_tune_model, fine_tune_model_direct, test_introspection_model

def main():
    # Configuration
    DATASET_FILE = "dataset_inspection/introspection_dataset.json"
    FORMATTED_DATA_FILE = "dataset_inspection/formatted_for_training.json"
    MODEL_OUTPUT_DIR = "./introspection_model"
    
    # Check if files exist
    if not os.path.exists(DATASET_FILE):
        print(f"Error: Dataset file {DATASET_FILE} not found!")
        print("Please run create_introspection_dataset.py first to generate the dataset.")
        return
    
    # Check if pre-formatted data exists
    use_formatted_data = os.path.exists(FORMATTED_DATA_FILE)
    
    if use_formatted_data:
        print(f"Found pre-formatted data: {FORMATTED_DATA_FILE}")
        print("Using pre-formatted data for faster training setup...")
    else:
        print(f"Pre-formatted data not found: {FORMATTED_DATA_FILE}")
        print("Using raw dataset...")
    
    print("Starting fine-tuning process...")
    print(f"Output directory: {MODEL_OUTPUT_DIR}")
    
    # Fine-tune the model
    print("\nStep 1: Fine-tuning the model...")
    
    if use_formatted_data:
        # Use the direct method with pre-formatted data
        fine_tune_model_direct(
            formatted_data_file=FORMATTED_DATA_FILE,
            output_dir=MODEL_OUTPUT_DIR,
            num_epochs=1,  # Reduced from 3 to 1 for faster testing
            batch_size=1,  # Reduced batch size for memory optimization
            learning_rate=2e-5,
            max_train_samples=50  # Use 50 samples for memory optimization
        )
    else:
        # Use the original method
        fine_tune_model(
            dataset_file=DATASET_FILE,
            output_dir=MODEL_OUTPUT_DIR,
            num_epochs=3,
            batch_size=2,  # Smaller batch size for memory efficiency
            learning_rate=2e-5
        )
    
    # Test the model
    print("\nStep 2: Testing the introspection model...")
    test_questions = [
        {
            "chinese_text": "把我给抓回去那我就完了我肯定会受到责罚的",
            "emotion_word": "Fear"
        },
        {
            "chinese_text": "把我给抓回去那我就完了我肯定会受到责罚的", 
            "emotion_word": "Anxiety"
        },
        {
            "chinese_text": "把我给抓回去那我就完了我肯定会受到责罚的",
            "emotion_word": "Joy"
        },
        {
            "chinese_text": "把我给抓回去那我就完了我肯定会受到责罚的",
            "emotion_word": "Desperation"
        }
    ]
    
    test_introspection_model(MODEL_OUTPUT_DIR, test_questions)
    
    print("\nFine-tuning and testing completed!")
    print(f"Model saved to: {MODEL_OUTPUT_DIR}")
    
    print("\nFiles used:")
    if use_formatted_data:
        print(f"  ✅ Pre-formatted data: {FORMATTED_DATA_FILE}")
    else:
        print(f"  📄 Raw dataset: {DATASET_FILE}")

if __name__ == "__main__":
    main() 